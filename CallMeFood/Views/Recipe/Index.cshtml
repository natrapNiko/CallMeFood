@using CallMeFood.ViewModels
@using CallMeFood.ViewModels.RecipeViewModels
@using Microsoft.AspNetCore.Identity
@inject UserManager<CallMeFood.Data.Models.ApplicationUser> UserManager

@{
    var currentUserId = UserManager.GetUserId(User);
    var isAdmin = User.IsInRole("Admin");
}

@model RecipeListViewModel
@{
    ViewData["Title"] = "All Recipes";
}

<div class="container mt-4">
    <h2 class="text-center mb-4 text-primary">🍲 All Recipes</h2>

    @if (!Model.Recipes.Any())
    {
        <div class="alert alert-warning text-center">No recipes found.</div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var recipe in Model.Recipes)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card shadow-sm h-100 border-0">
                        @if (!string.IsNullOrWhiteSpace(recipe.ImageUrl))
                        {
                            <img src="@recipe.ImageUrl" class="card-img-top rounded-top" style="height: 200px; object-fit: cover;" alt="Image for @recipe.Title" />
                        }

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-dark">@recipe.Title</h5>
                            <p class="card-text text-muted">@recipe.Description</p>
                            <p class="mb-1"><strong>Category:</strong> @recipe.CategoryName</p>
                            <p class="mb-1"><strong>Author:</strong> @recipe.AuthorName</p>
                            <p class="text-muted" style="font-size: 0.85rem;"><i>@recipe.CreatedOn.ToString("yyyy-MM-dd")</i></p>

                            <div class="mt-auto d-flex justify-content-between align-items-center pt-2 border-top">
                                <a href="@Url.Action("Details", "Recipe", new { id = recipe.Id })" class="btn btn-sm btn-outline-primary">View</a>

                                @if (isAdmin || recipe.AuthorId == currentUserId)
                                {
                                    <div>
                                        <a href="@Url.Action("Edit", "Recipe", new { id = recipe.Id })" class="btn btn-sm btn-outline-secondary me-1">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@recipe.Id" class="btn btn-sm btn-outline-danger"
                                           onclick="return confirm('Are you sure you want to delete this recipe?');">
                                            Delete
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
<nav>
    <ul class="pagination justify-content-center mt-4">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }
    </ul>
</nav>

